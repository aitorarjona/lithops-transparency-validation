# Define custom function directory
ARG FUNCTION_DIR="/function"

FROM python:3.7-buster as build-image

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Install aws-lambda-cpp build dependencies
RUN apt-get update && \
    apt-get install -y \
    g++ \
    make \
    cmake \
    unzip \
    libcurl4-openssl-dev

# Copy function code
RUN mkdir -p ${FUNCTION_DIR}

# Install the function's dependencies
RUN pip install \
    --target ${FUNCTION_DIR} \
    awslambdaric \
    boto3 \
    redis \
    httplib2 \
    requests \
    numpy \
    scipy \
    pandas \
    pika==0.13.1 \
    kafka-python \
    cloudpickle \
    ps-mem \
    tblib


FROM python:3.7-buster

# Include global arg in this stage of the build
ARG FUNCTION_DIR
# Set working directory to function root directory
WORKDIR ${FUNCTION_DIR}

# Copy in the built dependencies
COPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}

# Put your dependencies here, using RUN pip install... or RUN apt install...
RUN apt-get update \
    && apt-get upgrade -y --no-install-recommends \
    && apt-get install -y --no-install-recommends \
        libgl1-mesa-glx \
        make \
    && rm -rf /var/lib/apt/lists/*

RUN pip install --upgrade pip setuptools six && \
    pip install --no-cache-dir \
    joblib \
    tqdm \
    seaborn \
    pyparsing \
    glob2 \
    tensorflow==1.14.0 \
    tensorflow-gpu==1.14 \
    gym[atari]==0.15.7 \
    opencv-python==4.4.0.46

# RUN git clone https://github.com/openai/baselines.git \
#     && cd baselines \
#     && python setup.py install \
#     && cd ..
COPY baselines baselines

# Add Lithops
RUN mkdir lithops
COPY lithops_lambda.zip ${FUNCTION_DIR}
RUN unzip lithops_lambda.zip && rm lithops_lambda.zip

ENTRYPOINT [ "/usr/local/bin/python", "-m", "awslambdaric" ]
CMD [ "__main__.lambda_handler" ]